" Nerdtree binding
map <C-e> :NERDTreeToggle<CR>

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
    " alternatively, pass a path where Vundle should install plugins
    "call vundle#begin('~/some/path/here')

    " let Vundle manage Vundle, required
    Plugin 'VundleVim/Vundle.vim'
    "set rtp+=~/.fzf/
    set rtp+=~/.fzf/
    set rtp+=~/.vim/bundle/fzf
    Plugin 'junegunn/fzf'
    Plugin 'junegunn/fzf.vim'
    "Plugin 'junegunn/fzf.vim'
    Plugin 'scrooloose/nerdtree'
    Plugin 'w0rp/ale'

    Plugin 'Xuyuanp/nerdtree-git-plugin'
    Plugin 'altercation/vim-colors-solarized'
    Plugin 'bling/vim-airline'
    Plugin 'honza/vim-snippets'
    Plugin 'tpope/vim-fugitive'
    Plugin 'godlygeek/tabular'
    Plugin 'junegunn/vim-peekaboo'
    Plugin 'preservim/tagbar'

    Plugin 'christoomey/vim-tmux-navigator'
    Plugin 'airblade/vim-gitgutter'
    Plugin 'jalvesaq/Nvim-R'
    Plugin 'bfrg/vim-jqplay'
    Plugin 'diepm/vim-rest-console'


    Plugin 'github/copilot.vim'


    " All of your Plugins must be added before the following line
    call vundle#end()            " required
    filetype plugin indent on    " required
    " To ignore plugin indent changes, instead use:
    "filetype plugin on
    "
    " Brief help
    " :PluginList       - lists configured plugins
    " :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
    " :PluginSearch foo - searches for foo; append `!` to refresh local cache
    " :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
    "
    " see :h vundle for more details or wiki for FAQ
    " Put your non-Plugin stuff after this line
inoremap <expr> <c-x><c-k> fzf#vim#complete#word({'left': '15%'})
nnoremap <silent> <leader><space> :Files<CR>
nnoremap <silent> <leader>a :Buffers<CR>
nnoremap <silent> <leader>A :Windows<CR>
nnoremap <silent> <leader>; :BLines<CR>
nnoremap <silent> <leader>o :BTags<CR>
nnoremap <silent> <leader>O :Tags<CR> nnoremap <silent> <leader>? :History<CR>
nnoremap <silent> <leader>/ :execute 'Ag ' . input('Ag/')<CR>
nnoremap <silent> <leader>w :execute 'Ag ' . input('Ag/')<c-r><c-w><CR>
nnoremap <silent> <leader>. :AgIn 
let g:fzf_ag_default_opts = '--hidden --ignore .git --ignore .svn --ignore .hg --ignore .DS_Store --ignore tags'

vnoremap <silent> K :call SearchVisualSelectionWithAg()<CR>
nnoremap <silent> <leader>gl :Commits<CR>
nnoremap <silent> <leader>ga :BCommits<CR>
nnoremap <silent> <leader>ft :Filetypes<CR>

"To paste current word under cursor into fzf window do <C-r><C-w>
"To send search results from Ag to the quickfix list just select all <Alt-a>
"and press enter (https://github.com/junegunn/fzf.vim/issues/586)
imap <C-x><C-f> <plug>(fzf-complete-file-ag)
imap <C-x><C-l> <plug>(fzf-complete-line)


" press -- to have Nvim-R insert the assignment operator: <-
let R_assign_map = "--"

" set a minimum source editor width
let R_min_editor_width = 80

" make sure the console is at the bottom by making it really wide
let R_rconsole_width = 1000

" show arguments for functions during omnicompletion
let R_show_args = 1

" Don't expand a dataframe to show columns by default
let R_objbr_opendf = 0

" Press the space bar to send lines and selection to R console
vmap <Space> <Plug>RDSendSelection
nmap <Space> <Plug>RDSendLine

nnoremap <Leader>f :NERDTreeFind<CR>
" Disable tagbar lazy load to fix airline and tagbar compatibility issue
" https://github.com/vim-airline/vim-airline/issues/1313
let g:airline#extensions#tagbar#enabled = 0
" http://vimcasts.org/transcripts/29/en/
if exists(":Tabularize")
    nmap <Leader>a= :Tabularize /=<CR>
    vmap <Leader>a= :Tabularize /=<CR>
    nmap <Leader>a: :Tabularize /:\zs<CR>
    vmap <Leader>a: :Tabularize /:\zs<CR>
endif
